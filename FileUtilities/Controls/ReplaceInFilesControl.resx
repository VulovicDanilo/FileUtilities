<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFolderFilter.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>